[globals]
HOME_PHONE=rpi_sip

[LocalSets]
; need to do something about outgoing calls
include=>UserServices
exten => _[*X].,1,Verbose(1,Caller has dialed an extension that does NOT begin with pound)
	same => n,GotoIf($["${CALLERID(num)}"!=${HOME_PHONE}]?main_menu,s,1)
exten => _#X,1,Verbose(1,Selected manage numberlist, i.e. whitelist and blacklist)
	same => n,GotoIf($[${CALLERID(name)}=${HOME_PHONE}]?continue-to-manage-numberlist:hangup) ; should only access this part from the home phone
	same => n(continue-to-manage-numberlist),Set(OPTION=${SQL_ESC(${EXTEN:1})}); get the option number: was it #1 or #2?.
	same => n,Goto(manage_numberlist,start,1)
	same => n(hangup),Hangup()
exten => 101,1,Dial(SIP/ubuntu_zoiper)
exten => 102,1,Dial(SIP/ubuntu2_zoiper)
exten => 103,1,Dial(SIP/rpi_sip)
exten => 104,1,Dial(SIP/mac_zoiper_sip_3)
exten => 105,1,Dial(SIP/some_other_sip_3)

[main_menu]
exten => s,1,NoOp()

	; this should cause robo-callers to hang up
	; same => n,Zapateller()

	; set a variable to hold the callerid. Will pass this through if and when connecting the call to the 'home phone'
	; more info on CALLERID variables is here: http://www.voip-info.org/wiki/view/Asterisk+func+callerid
	same => n,Set(INCOMING_CALLERID=${SQL_ESC(${CALLERID(num)})}
	same => n,Verbose(2, INCOMING_CALLERID)
	same => n,Verbose(1, num = ${CALLERID(num)})
	same => n,Verbose(1, name = ${CALLERID(name)})
	same => n,Verbose(1, all = ${CALLERID(all)})
	same => n,Verbose(1, dnid = ${CALLERID(dnid)})
	same => n,Verbose(1, rdnis = ${CALLERID(rdnis)})
	same => n,Verbose(1, pres = ${CALLERID(pres)})
	same => n,Verbose(1, ton = ${CALLERID(ton)})
	; page 645 of the Asterisk book
	same => n,Set(CDR(callerid_num)=${SQL_ESC(${CALLERID(num)})}
	same => n,Set(CDR(callerid_name)=${SQL_ESC(${CALLERID(name)})}
	same => n,Set(CDR(callerid_all)=${SQL_ESC(${CALLERID(all)})}
	same => n,Set(CDR(callerid_dnid)=${SQL_ESC(${CALLERID(dnid)})}

	; if there is no callerid, send the call to the Local Channel for playing the greeting and asking for the extension
	same => n,GoSubIf($[${ISNULL(${INCOMING_CALLERID})}]?subVoicemail,start,1)

	; if the callerid is on the whitelist, send the call right through
	;same => n,GoSubIf($["${INCOMING_CALLERID}"="mac_zoiper_sip_3"]?passthrough)
	same => n,Set(LIST_TYPE=${GENERIC_SQL(SELECT list_type FROM numberlist WHERE callerid_num='${INCOMING_CALLERID}' )})
	same => n,Verbose(1,LIST_TYPE=${LIST_TYPE})
	same => n,GotoIf($[${ODBCROWS} < 1]?ask-for-extension)
	same => n,GotoIf($[${LIST_TYPE}=1]?525,1)					; 1 is whitelist
	same => n,GotoIf($[${LIST_TYPE}=2]?subVoicemail,start,1)	; 2 is blacklist

	same => n(ask-for-extension),Verbose(1, Caller ${CALLERID(all)} has entered the auto attendant)
	same => n,Answer()
	same => n,Set(TIMEOUT(digit)=2)
	same => n,Wait(1)
	same => n,Background(daygreeting)
	same => n,WaitExten(4)
	same => n,Goto(subVoicemail,start,1)

exten => _.,1,Verbose(1, Caller entered extension ${EXTEN})
	same => n,Set(PASSTHROUGH=${GENERIC_SQL(SELECT IF(COUNT(1)>0, 1, 0) FROM extensions_passthrough WHERE extension='${SQL_ESC(${EXTEN})}')})
	same => n,Verbose(1,PASSTHROUGH=${PASSTHROUGH}, SQL=SELECT IF(COUNT(1)>0, 1, 0) FROM extensions_passthrough WHERE extension='${SQL_ESC(${EXTEN})}')
	same => n,GotoIf($[${PASSTHROUGH}]?bingo:subVoicemail,start,1)
	same => n(bingo),Dial(SIP/rpi_sip)

[manage_numberlist]
; need to secure this somehow... maybe by callerid_num of the calling phone?
exten => start,1,Verbose(1,Entering the manage numberlist context. Caller selected option ${OPTION})
	same => n,Verbose(1,The caller selected ${OPTION}. The caller is calling from '${SQL_ESC(${CALLERID(num)})}')
	; The next line gets the most recent record in the cdr table that is not from this call.
	; same => n,Set(LAST_CALLERID_NUM=${GENERIC_SQL(SELECT callerid_num FROM cdr ORDER BY start DESC LIMIT 1)})
	same => n,Set(LAST_CALLERID_NUM=${GENERIC_SQL(SELECT src FROM cdr WHERE src != '${SQL_ESC(${CALLERID(num)})}' ORDER BY start DESC LIMIT 1)})
	same => n,Verbose(1,The last number that called in was ${LAST_CALLERID_NUM})
	same => n,GotoIf($[${ODBCROWS} < 0]?hangup) ; if there was no such last number then go to the hangup step
	same => n,GotoIf($[${OPTION}=1|${OPTION}=2]?update-or-insert-into-db:hangup)
	same => n(hangup),Hangup() ; really should give a message that there was no last call found
	same => n(update-or-insert-into-db),Verbose(1,updating or inserting into db.......) ; I'm not going to bother with upsert, will instead check
	same => n,Set(NUMBER_IN_NUMBERLIST=${GENERIC_SQL(SELECT callerid_num FROM numberlist WHERE callerid_num='${LAST_CALLERID_NUM}')})
	same => n,Verbose(1, NUMBER_IN_NUMBERLIST=${NUMBER_IN_NUMBERLIST}, ODBCROWS=${ODBCROWS})
	same => n,GotoIf($[${ODBCROWS} < 1]?insert-into-db:update-db) ; if no results returned, then insert; otherwise, update
	same => n(update-db),Verbose(1,Updating db.......)
	same => n,Set(GENERIC_SQL()=UPDATE numberlist SET list_type='${OPTION}' WHERE callerid_num='${LAST_CALLERID_NUM}' )
	same => n,Hangup()
	same => n(insert-into-db),Verbose(1,Inserting into db.......)
	same => n,Set(GENERIC_SQL()=INSERT INTO numberlist (callerid_num, list_type) VALUES ('${LAST_CALLERID_NUM}','${OPTION}'))
	same => n,Hangup()

[subVoicemail]
exten => start,1,Verbose(1, Entering voicemail context)
	same => n,Voicemail(101@default,u)
	same => n,Hangup()

exten => *98,1,NoOp(Access voicemail retrieval.)
	same => n,Set(JITTERBUFFER(fixed)=default)
	same => n,VoiceMailMain()

[UserServices]
exten => 500,1,Playback(vm-intro)
       same => n,Record(daygreeting.wav)
       same => n,Playback(daygreeting)
       same => n,Hangup;

exten => 501,1,Playback(vm-intro)
       same => n,Record(mainmenu.wav)
       same => n,Playback(mainmenu.wav)
       same => n,Hangup
exten => *98,1,NoOp(Access voicemail retrieval.)
	same => n,Verbose(1, Entering voicemail retreival extension)
	same => n,VoiceMailMain(101@default)

